{"ast":null,"code":"const {\n  createSlice\n} = require(\"@reduxjs/toolkit\");\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartItems: []\n  },\n  reducers: {\n    setInitialValue(state, action) {\n      state.cartItems = action.payload;\n    },\n\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const index = state.cartItems.findIndex(drink => drink.idDrink === newItem.idDrink);\n\n      if (index >= 0) {\n        state.cartItems[index].quantity += newItem.quantity;\n      } else {\n        state.cartItems.push(newItem);\n      }\n    },\n\n    updateDrinkQuantity(state, action) {\n      const {\n        drinkId,\n        quantity\n      } = action.payload;\n      const index = state.cartItems.findIndex(drink => drink.idDrink === drinkId);\n\n      if (index >= 0) {\n        state.cartItems[index].quantity = quantity;\n      }\n    },\n\n    removeFromCart(state, action) {\n      const idNeedToRemove = action.payload;\n      state.cartItems = state.cartItems.filter(drink => drink.idDrink !== idNeedToRemove);\n    },\n\n    refreshCarteFromCart(state, action) {\n      state.cartItems = [];\n    }\n\n  }\n});\nconst {\n  actions,\n  reducer\n} = cartSlice;\nexport { actions as CartAction, reducer as CartReducer };","map":{"version":3,"sources":["C:/Users/COMPUTER/Desktop/Homework06_ReduxAndRouting/VinhLT_Assignment6_RoutingAndRedux/src/redux/slices/cartSlice.js"],"names":["createSlice","require","cartSlice","name","initialState","cartItems","reducers","setInitialValue","state","action","payload","addToCart","newItem","index","findIndex","drink","idDrink","quantity","push","updateDrinkQuantity","drinkId","removeFromCart","idNeedToRemove","filter","refreshCarteFromCart","actions","reducer","CartAction","CartReducer"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAkBC,OAAO,CAAC,kBAAD,CAA/B;;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,SAAS,EAAE;AADC,GAFc;AAK5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eAAe,CAACC,KAAD,EAAQC,MAAR,EAAgB;AAC7BD,MAAAA,KAAK,CAACH,SAAN,GAAkBI,MAAM,CAACC,OAAzB;AACD,KAHO;;AAIRC,IAAAA,SAAS,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACvB,YAAMG,OAAO,GAAGH,MAAM,CAACC,OAAvB;AACA,YAAMG,KAAK,GAAGL,KAAK,CAACH,SAAN,CAAgBS,SAAhB,CACXC,KAAD,IAAWA,KAAK,CAACC,OAAN,KAAkBJ,OAAO,CAACI,OADzB,CAAd;;AAGA,UAAIH,KAAK,IAAI,CAAb,EAAgB;AACdL,QAAAA,KAAK,CAACH,SAAN,CAAgBQ,KAAhB,EAAuBI,QAAvB,IAAmCL,OAAO,CAACK,QAA3C;AACD,OAFD,MAEO;AACLT,QAAAA,KAAK,CAACH,SAAN,CAAgBa,IAAhB,CAAqBN,OAArB;AACD;AACF,KAdO;;AAeRO,IAAAA,mBAAmB,CAACX,KAAD,EAAQC,MAAR,EAAgB;AACjC,YAAM;AAAEW,QAAAA,OAAF;AAAWH,QAAAA;AAAX,UAAwBR,MAAM,CAACC,OAArC;AACA,YAAMG,KAAK,GAAGL,KAAK,CAACH,SAAN,CAAgBS,SAAhB,CACXC,KAAD,IAAWA,KAAK,CAACC,OAAN,KAAkBI,OADjB,CAAd;;AAGA,UAAIP,KAAK,IAAI,CAAb,EAAgB;AACdL,QAAAA,KAAK,CAACH,SAAN,CAAgBQ,KAAhB,EAAuBI,QAAvB,GAAkCA,QAAlC;AACD;AACF,KAvBO;;AAwBRI,IAAAA,cAAc,CAACb,KAAD,EAAQC,MAAR,EAAgB;AAC5B,YAAMa,cAAc,GAAGb,MAAM,CAACC,OAA9B;AACAF,MAAAA,KAAK,CAACH,SAAN,GAAkBG,KAAK,CAACH,SAAN,CAAgBkB,MAAhB,CACfR,KAAD,IAAWA,KAAK,CAACC,OAAN,KAAkBM,cADb,CAAlB;AAGD,KA7BO;;AA8BRE,IAAAA,oBAAoB,CAAChB,KAAD,EAAQC,MAAR,EAAgB;AAClCD,MAAAA,KAAK,CAACH,SAAN,GAAkB,EAAlB;AACD;;AAhCO;AALkB,CAAD,CAA7B;AAyCA,MAAM;AAAEoB,EAAAA,OAAF;AAAWC,EAAAA;AAAX,IAAuBxB,SAA7B;AACA,SAASuB,OAAO,IAAIE,UAApB,EAAgCD,OAAO,IAAIE,WAA3C","sourcesContent":["const { createSlice } = require(\"@reduxjs/toolkit\");\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    cartItems: [],\n  },\n  reducers: {\n    setInitialValue(state, action) {\n      state.cartItems = action.payload;\n    },\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const index = state.cartItems.findIndex(\n        (drink) => drink.idDrink === newItem.idDrink\n      );\n      if (index >= 0) {\n        state.cartItems[index].quantity += newItem.quantity;\n      } else {\n        state.cartItems.push(newItem);\n      }\n    },\n    updateDrinkQuantity(state, action) {\n      const { drinkId, quantity } = action.payload;\n      const index = state.cartItems.findIndex(\n        (drink) => drink.idDrink === drinkId\n      );\n      if (index >= 0) {\n        state.cartItems[index].quantity = quantity;\n      }\n    },\n    removeFromCart(state, action) {\n      const idNeedToRemove = action.payload;\n      state.cartItems = state.cartItems.filter(\n        (drink) => drink.idDrink !== idNeedToRemove\n      );\n    },\n    refreshCarteFromCart(state, action) {\n      state.cartItems = [];\n    },\n  },\n});\n\nconst { actions, reducer } = cartSlice;\nexport { actions as CartAction, reducer as CartReducer };\n"]},"metadata":{},"sourceType":"module"}